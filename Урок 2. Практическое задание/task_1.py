"""
1.	Написать программу, которая будет складывать, вычитать, умножать или делить
два числа. Числа и знак операции вводятся пользователем. После выполнения
вычисления программа не должна завершаться, а должна запрашивать новые данные
для вычислений. Завершение программы должно выполняться при вводе символа '0'
в качестве знака операции. Если пользователь вводит неверный знак
(не '0', '+', '-', '*', '/'), то программа должна сообщать ему об ошибке и
снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, / - ШАГ РЕКУРСИИ
- условие завершения рекурсии - введена операция 0 - БАЗОВЫЙ СЛУЧАЙ

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7
"""
def calculate():
    operant = input("Введите операцию(+, -, *, / или 0 для выхода):")
    if operant == '0':
        print("Exit")
        return
    elif operant not in '+-*/':
        print("Вы не правильно ввели операцию(((. Исправьтесь")
        return
    arg1 = int(input("Введите первое число: "))
    arg2 = int(input("Введите второе число: "))
    if type(arg1) != int or type(arg2) != int:
        print("Вы вместо трехзначного числа ввели строку (((. Исправьтесь")
        return
    if operant == '+':
        res = arg1 + arg2
    elif operant == '-':
        res = arg1 - arg2
    elif operant == '*':
        res = arg1 * arg2
        
    if operant == '/' and arg2 != 0:
        res = arg1 / arg2
    else:
        print("на ноль делить нельзя")
        return
    print(f'Ваш результат {res}')
    calculate()


calculate()
